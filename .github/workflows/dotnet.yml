# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET Core 5
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 5.0.x

      - name: 📦 Restore dependencies
        run: dotnet restore

      - name: 🛠️ Build project
        run: dotnet build --no-restore --configuration Release

      - name: 🧪 Run tests
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --logger trx

      - name: 🚀 Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: 📊 Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          dotnet sonarscanner begin /k:"quoctuan1780-1" /d:sonar.host.url="$env:SONAR_HOST_URL" /d:sonar.login="$env:SONAR_TOKEN" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          dotnet build --no-restore --configuration Release
          dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --logger trx
          dotnet sonarscanner end /d:sonar.login="$env:SONAR_TOKEN"
