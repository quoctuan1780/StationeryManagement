@inject Microsoft.AspNetCore.Identity.UserManager<Entities.Models.User> userManager
@model FinalProject.Areas.Warehouse.ViewModels.ReceiptRequestViewModel
@{
    ViewData["Title"] = "CreateReceiptRequest";
    Layout = "~/Areas/Warehouse/Views/Shared/_Layout.cshtml";
    var request = ViewBag.Request as Entities.Models.ReceiptRequest;
}

<div class="container-fluid">

    <h1 align="center">PHIẾU YÊU CẦU NHẬP KHO</h1>
    <div class="form-group">
        <label>Mã phiếu: </label>
        <input type="datetime" class="form-control" name="CreateDate" value="@request.ReceiptRequestId" readonly />

    </div>
    <div class="form-group">
        <label>Người tạo: </label>
        <input type="datetime" class="form-control" name="CreateDate" value="@request.UserId" readonly />

    </div>
    <div class="form-group">
        <label>Ngày tạo: </label>
        <input type="datetime" class="form-control" name="CreateDate" value="@request.CreateDate" readonly />

    </div>

    <div class="form-group">
        <label>Trạng thái: </label>

        <input type="text" class="form-control" name="Status" value="@request.Status" readonly />

    </div>

    <h3>Chi tiết yêu cầu</h3>

    @if (request.ReceiptRequestDetails.Count > 0)
    {
        <table>
            <tr>
                <th>Mã chi tiết sản phẩm</th>
                <th>Tên sản phẩm</th>
                <th>Số lượng</th>
            </tr>
            @foreach(var item in request.ReceiptRequestDetails)
                {<tr>
                    <td>@item.ProductDetailId</td>
                    <td>@item.ProductDetail.Product.ProductName</td>
                    <td>@item.Quantity</td>
                </tr>
                }
        </table>
    }
   
</div>
@section Scripts{
    <script>
        var Products = document.getElementsByName('ProductDetailId');
        var Quantities = document.getElementsByName('Quantity');


        function removeDetail(e) {
            $(e).parent().parent().remove();
        }

        $(document).ready(function () {
            $('.selectpicker').selectpicker({
                liveSearch: true,
                showSubtext: true,
                Size: 10
            });
        });

        function CheckProductId(e) {
            var product = $(e).val();
            for (var i = 0; i < Products.length; i++)
            {
                if (product == Products[i]) {
                    count++;
                }
                if (count == 2) {
                    alert("Sản phẩm đã tồn tại trong danh sách phiếu yêu cầu nhập hàng");
                }
            }
            return 0;
        }

        function submit() {

            var countErrorValidate = validateDetail();
            var rows = document.getElementsByName("ProductDetailId");
            console.log(rows);
            if (rows.length === 0) {
                Swal.fire({
                    title: 'Thông báo',
                    text: "Bạn phải có chi tiết phiếu yêu cầu! ",
                    icon: 'info',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: `Ok`,
                });
            }
            else
                if (countErrorValidate === 0) {
                    console.log(countErrorValidate);
                    $('#form-receipt-request').submit();
                }

        }




        function addDetail(productsJson) {
            var products = JSON.parse(productsJson);
            console.log(products);
            var node =
                '<div class="row">' +
                    '<div class="col-8">' +
                    '<select class="selectpicker show-tick form-control" id="ProductId" name="ProductId" data-live-search="true"onchange="CheckProductId(this)">' +
                    '<option>Chọn sản phẩm</option>';

                for (let item of products)
                {
                    console.log(item)
                    node += '<option value="' + item.Value + '">' + item.Text + '</option>';
                }

                node += '</select></div><div class="col-2">' +
                        '<label>Số lượng</label>' +
                        '<input type="number" class="form-control" id="Quantity" name="Quantity" value="1" min="1" onkeypress="return event.charCode > 46 && event.charCode < 58" /></div>' +
                    '<div class="col-2"><button type="button" class="btn btn-danger" onclick="removeDetail(this)"><i class="fa fa-minus"></i></button></div></div>';

            $('#product-detail').append(node);

            $('.selectpicker').selectpicker({
                liveSearch: true,
                showSubtext: true,
                Size: 10
            });
        }

        function validateDetail() {
            var countErrorValidate = 0;

            $('.validate-product-detail').remove();

            for (let i = 0; i < Products.length; i++) {
                if (Products[i].value == '0') {
                    var node = Products[i];
                    var text = '<span class="field-validation-valid text-danger validate-product-detail">' +
                        'Sản phẩm không được để trống</span>';
                    countErrorValidate++;
                    $(node).parent().append(text);
                }
                else {
                    for (let j = 0; j < i; j++) {
                        if (Products[i] == Products[j]) {
                            var text = '<span class="field-validation-valid text-danger validate-product-detail">' +
                                'Sản phẩm đã tồn tại trong danh sách</span>';
                            countErrorValidate++;
                            $(node).parent().append(text);

                        }
                    }
                }
                console.log(Products[i].value);
                console.log(Quantities[i].value)
                if (Quantities[i].value === '') {
                    var node = Quantities[i];
                    var text = '<span class="field-validation-valid text-danger validate-product-detail">' +
                        'Số lượng không hợp lệ</span>';
                    countErrorValidate++;
                    $(node).parent().append(text);
                }

            }
            return countErrorValidate;
        }

    </script>
}

