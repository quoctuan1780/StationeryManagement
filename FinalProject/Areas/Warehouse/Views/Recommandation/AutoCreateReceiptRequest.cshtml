@model FinalProject.Areas.Warehouse.ViewModels.ReceiptRequestViewModel
@{
    ViewData["Title"] = "Tạo phiếu yêu cầu nhập hàng";
    Layout = "~/Areas/Warehouse/Views/Shared/_Layout.cshtml";

    var ListProduct = ViewBag.ListProduct as IList<Entities.Models.ProductDetail>;
}

<div class="container-fluid">
    @if (!(ViewBag.MessageSuccess is null))
    {
        <div class="alert alert-success">@ViewBag.Message</div>
    }
    <h1 class="h3 mb-2 text-gray-800">Tạo phiếu yêu cầu nhập hàng</h1>
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <form asp-action="AutoCreateReceiptRequest" asp-controller="Recommandation" asp-area="Warehouse" method="post" id="form">
                    @Html.AntiForgeryToken()
                    <table class="table table-bordered" id="auto-create-receipt-request" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Mã sản phẩm</th>
                                <th>Tên sản phẩm</th>
                                <th>Màu sắc</th>
                                <th>Số lượng trong kho</th>
                                <th>Số lượng còn lại</th>
                                <th>Số lượng nhập</th>
                                <th>Giá nhập</th>
                                <th>Chọn</th>

                            </tr>
                        </thead>
                        <tbody>
                            @if (ListProduct is not null)
                            {
                                @foreach (var item in ListProduct)
                                {
                                    <tr>
                                        <td>
                                            <input type="hidden" name="ProductDetailId" value="@item.ProductDetailId" />
                                            @item.ProductDetailId
                                        </td>
                                        <td>@item.Product.ProductName</td>
                                        <td>@item.Color</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.RemainingQuantity</td>
                                        @if (Model != null && Model.ProductDetailId != null)
                                        {
                                            if (Model.ProductDetailId.Contains(item.ProductDetailId))
                                            {
                                                int index = Model.ProductDetailId.IndexOf(item.ProductDetailId);
                                                {
                                                    <td>
                                                        <input type="number" class="form-control" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="Quantity" value="@Model.Quantity[index]" />
                                                    </td>
                                                    <td>
                                                        <input type="number" class="form-control" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="Prices" value="@Model.Prices[index]" />
                                                    </td>
                                                    <td>
                                                        <input type="checkbox" class="form-control" name="selected" value="@item.ProductDetailId" checked />
                                                    </td>
                                                }
                                            }
                                            else
                                            {
                                                <td>
                                                    <input type="number" class="form-control" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="Quantity" />
                                                </td>
                                                <td>
                                                    <input type="number" class="form-control" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="Prices" />
                                                </td>
                                                <td>
                                                    <input type="checkbox" class="form-control" name="selected" value="@item.ProductDetailId" />
                                                </td>
                                            }
                                        }
                                        else
                                        {
                                            <td>
                                                <input type="number" class="form-control" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="Quantity" />
                                            </td>
                                            <td>
                                                <input type="number" class="form-control" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="Prices" />
                                            </td>
                                            <td>
                                                <input type="checkbox" class="form-control" name="selected" value="@item.ProductDetailId" />
                                            </td>
                                        }
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <input type="hidden" name="productDetalIdMultiPage" value="" id="product-detail-multy-page"/>
                    <input type="hidden" name="priceMultiPage" value="" id="price-detail-multy-page"/>
                    <input type="hidden" name="quantityMultiPage" value="" id="quantity-detail-multy-page"/>
                </form>
                <div class="col-lg-12">
                    <input type="button" value="Tạo phiếu" class="btn btn-success" onclick="submit()" />
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#best-seller').DataTable();
            $('#buy-together').DataTable();
        });

        var table = $('#auto-create-receipt-request').DataTable();


        var productDetailIds = [];
        var quantities = [];
        var prices = [];

        function submit() {

            table.search('').draw();

            $('.field-validation-valid').remove();

            productDetailIds = [];
            quantities = [];
            prices = [];

            var rows = table.rows({ 'search': 'applied' }).nodes();
            var countError = 0;
            var countChoose = 0;

            for (let i = 0; i < rows.length; i++) {
                if ($('input[type="checkbox"]', rows[i]).is(":checked")) {
                    countChoose++;
                    if ($('input[name="Quantity"]', rows[i]).val() === '' || $('input[name="Quantity"]', rows[i]).val() === '0') {
                        $($('input[name="Quantity"]', rows[i])).closest('td').append('<span class="field-validation-valid text-danger validate-product-detail">' +
                            'Số lượng không hợp lệ</span>');

                        countError++;
                    }

                    if ($('input[name="Prices"]', rows[i]).val() === '') {
                        $($('input[name="Prices"]', rows[i])).closest('td').append('<span class="field-validation-valid text-danger validate-product-detail">' +
                            'Giá nhập không hợp lệ</span>');
                        countError++
                    }
                }
            }

            if (countError > 0) {
                return undefined;
            }

            if (countChoose === 0) {
                Swal.fire({
                    title: 'Thông báo',
                    text: "Không có sản phẩm nào được chọn! ",
                    icon: 'info',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: `Ok`,
                });
                return undefined;
            }

            for (let i = 0; i < rows.length; i++) {
                if ($('input[type="checkbox"]', rows[i]).is(":checked")) {
                    productDetailIds.push($('input[type="checkbox"]', rows[i]).val());
                    quantities.push($('input[name="Quantity"]', rows[i]).val());
                    prices.push($('input[name="Prices"]', rows[i]).val());
                }
            }

            $('#product-detail-multy-page').val(productDetailIds);
            $('#price-detail-multy-page').val(prices);
            $('#quantity-detail-multy-page').val(quantities);

            $('#form').submit();
        }

        function ShowBestSeller() {

            var quantity = $('#quantity').val();
            var fromDate = $('#fromdate').val();
            var toDate = $('#todate').val();
            var listProduct = [];
            $.ajax({
                url: '/Warehouse/Recommandation/GetBestSeller',
                method: 'GET',
                async: true,
                data: { fromDate: fromDate, toDate: toDate, quantity: quantity },
                success: function (data) {
                    listProduct = JSON.parse(data);
                    var str = '';
                    for (let item of listProduct) {
                        str += '<tr><td>' + item.productDetailId + '</td>' +
                            '<td>' + item.productName + '</td>' +
                            '<td>' + item.color + '</td>' +
                            '<td>' + item.totalQuantity + '</td>' +
                            '<td>' + item.quantityOrdered + '</td>' +
                            '<td>' + item.RemainingQuantity + '</td></tr>';
                    }
                    $('#BestSeller').html(str);
                    if (listProduct.length > 0) {
                        $.ajax({
                            url: '/Warehouse/Recommandation/GetRecommandation',
                            method: 'GET',
                            async: true,
                            success: function (data) {
                                var listProduct = JSON.parse(data);
                                var str = '';
                                for (let item of listProduct) {
                                    str += '<tr><td>' + item.productDetailId + '</td>' +
                                        '<td>' + item.productName + '</td>' +
                                        '<td>' + item.color + '</td>' +
                                        '<td>' + item.totalQuantity + '</td>' +
                                        '<td>' + item.quantityOrdered + '</td>' +
                                        '<td>' + item.RemainingQuantity + '</td></tr>';
                                }
                                $('#Rule').html(str);
                            }
                        })
                    }
                }
            });
        }
    </script>
}
