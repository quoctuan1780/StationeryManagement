@{
    ViewData["Title"] = "Tạo phiếu yêu cầu nhập hàng";
    Layout = "~/Areas/Warehouse/Views/Shared/_Layout.cshtml";

    var ProductOutOfStock = ViewBag.ProductOutOfStock as IList<Entities.Models.ProductDetail>;
    var BestSeller = ViewBag.BestSeller as string;
    var Recommandation = ViewBag.Recommandation as IList<Entities.Models.ProductDetail>;

    var bestSellerConvert = Newtonsoft.Json.JsonConvert.DeserializeObject<IList<Newtonsoft.Json.Linq.JObject>>(BestSeller);
}

<div class="container-fluid">
    @if (!(ViewBag.MessageSuccess is null))
    {
        <div class="alert alert-success">@ViewBag.Message</div>
    }
    <h1 class="h3 mb-2 text-gray-800">Tạo phiếu yêu cầu nhập hàng</h1>
    <h2 class="h3 mb-2 text-gray-800">Danh sách sản phẩm</h2>
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <form asp-action="AutoCreateReceiptRequest" asp-controller="Recommandation" asp-area="Warehouse" method="post" id="form">
                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Mã sản phẩm</th>
                                <th>Tên sản phẩm</th>
                                <th>Màu sắc</th>
                                <th>Số lượng trong kho</th>

                                <th>Số lượng còn lại</th>
                                <th>Số lượng cần đặt</th>
                                <th>Chọn</th>

                            </tr>
                        </thead>
                        <tbody>
                            @if (ProductOutOfStock is not null)
                            {
                                @foreach (var item in ProductOutOfStock)
                                {
                                    <tr>
                                        <td>@item.ProductDetailId</td>
                                        <td>@item.Product.ProductName</td>
                                        <td>@item.Color</td>
                                        <td>@item.Quantity</td>

                                        <td>@item.RemainingQuantity</td>
                                        <td><input type="number" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="quantity" /></td>
                                        <td><input type="checkbox" name="selected" value="@item.ProductDetailId" /></td>
                                    </tr>
                                }
                            }
                            @if (bestSellerConvert is not null)
                            {
                                @foreach (var item in bestSellerConvert)
                                {
                                    {
                                        var productDetailId = item.Value<int>("productDetailId");
                                        var productName = item.Value<string>("productName");
                                        var color = item.Value<string>("color");
                                        var totalQuantity = item.Value<int>("totalQuantity");
                                        var quantityOrdered = item.Value<int>("quantityOrdered");
                                        var RemainingQuantity = item.Value<int>("RemainingQuantity");
                                    
                                        <tr>
                                            <td>@productDetailId</td>
                                            <td>@productName</td>
                                            <td>@color</td>
                                            <td>@totalQuantity</td>
                                            <td>@RemainingQuantity</td>
                                            <td><input type="number" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="quantity" />
                                            <td><input type="checkbox" name="selected" value="@productDetailId" /></td>
                                        </tr>
                                    }
                                }
                            }
                            @if (Recommandation is not null)
                            {
                                @foreach (var item in Recommandation)
                                {
                                    <tr>
                                        <td>@item.ProductDetailId</td>
                                        <td>@item.Product.ProductName</td>
                                        <td>@item.Color</td>
                                        <td>@item.Quantity</td>

                                        <td>@item.RemainingQuantity</td>
                                        <td><input type="number" min="0" onkeypress='return event.charCode > 46 && event.charCode < 58' name="quantity" />
                                        <td><input type="checkbox" name="selected" value="@item.ProductDetailId" /></td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </form>
                    <input type="button" value="Tạo phiếu" class="btn-info" onclick="submit()" />

            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        function submit() {

            var countErrorValidate = 0;
            var Quantities = document.getElementsByName('quantity');
            var Selected = document.getElementsByName('selected');
            var count = Selected.length;
            $('.field-validation-valid').remove();
            for (var i = 0; i < Quantities.length; i++) {
                if ((Quantities[i].value === '' || Quantities[i] === 0) && Selected[i].checked) {
                    var node = Quantities[i];
                    var text = '<span class="field-validation-valid text-danger validate-product-detail">' +
                        'Số lượng không hợp lệ</span>';
                    countErrorValidate++;
                    $(node).parent().append(text);
                }
                if ((Quantities[i].value !== '' || Quantities[i] !== 0) && Selected[i].checked) {
                    count--;
                }
                
            }
        
            if (countErrorValidate > 0 || Quantities.length === count) {
                if (Quantities.length === count) {
                    Swal.fire({
                        title: 'Thông báo',
                        text: "Không có sản phẩm nào được chọn! ",
                        icon: 'info',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: `Ok`,
                    });
                } else {
                    Swal.fire({
                        title: 'Thông báo',
                        text: "Số lượng không được để trống! ",
                        icon: 'info',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: `Ok`,
                    });
                }
                
            } else {
                $('#form').submit();
            }
        }
    </script>
}
