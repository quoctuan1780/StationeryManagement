
@model FinalProject.Areas.Admin.ViewModels.ProductViewModel
@{
    ViewData["Title"] = "Thêm sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var categories = ViewBag.Categories as IList<SelectListItem>;
}

<div class="container-fluid">

    <h1 class="h3 mb-2 text-gray-800">Thêm sản phẩm</h1>
    <hr class="hr-end-list" />
    @if (!(ViewBag.MessageSuccess is null))
    {
        <div class="alert alert-success">@ViewBag.MessageSuccess</div>
    }
    @if (!(ViewBag.MessageExists is null))
    {
        <div class="alert alert-danger">@ViewBag.MessageExists</div>
    }
    @if (!(ViewBag.MessageError is null))
    {
        <div class="alert alert-danger">@ViewBag.MessageError</div>
    }

    @using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new
    {
        role = "form",
        area = "Admin",
        enctype = "multipart/form-data",
        id = "form-product"
    }))
    {
        <input type="hidden" name="imagePreviewDeteted" id="image-preview-deleted"/>
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(m => m.ProductName)
            @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", @name = "name", @id = "name" })
            @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Description)
            <textarea id="description" name="description">
            @if (!(Model is null)){
                Html.Raw(Model.Description);
            }
            </textarea>
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Price)
            @Html.TextBoxFor(m => m.Price, new
            {
                @class = "form-control",
                @name = "price",
                @id = "price",
                @type = "number"
            })
            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.CategoryId)
            @Html.DropDownListFor(m => m.CategoryId, categories, new
            {
                @class = "form-control",
                @name = "category-id",
                @id = "category-id",
            })
            @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group form-flex" id="show-image-preview">
            
        </div>

        <div class="form-group">
            <label asp-for="Images"></label>
            <input type="file" class="form-control-file" accept="image/*" asp-for="Images" onchange="previewImage(event)" id="images-file" multiple/>
            <span class="text-danger" asp-validation-for="Images"></span>
        </div>

        <h3>Chi tiết sản phẩm</h3>
        <div class="form-group">
            <div class="row">
                <div class="col-lg-3 text-center">
                    <span>Xuất xứ</span>
                </div>
                <div class="col-lg-3 text-center">
                    <span>Trọng lượng</span>
                </div>
                <div class="col-lg-3 text-center">
                    <span>Màu sắc</span>
                </div>
                <div class="col-lg-2 text-center">
                    <span>Giá bán</span>
                </div>
                <div class="col-lg-1 text-center">
                    <span>Chức năng</span>
                </div>
            </div>
            <div id="product-detail" class="col-lg-12">
                @if (!(Model is null))
                {
                    if (Model.Origins != null)

                        for (int i = 0; i < Model.Origins.Count; i++)
                        {
                            <input type="hidden" name="Quantities" value="0" />
                            <div class="row" style="padding-top: .5rem;">
                                <div class="col-lg-3">
                                    <input type="text" name="Origins" value="@Model.Origins[i]" class="form-control" />
                                </div>
                                <div class="col-lg-3">
                                    <input type="number" name="Weights" placeholder="KG" value="@Model.Weights[i]" class="form-control" />
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" name="Colors" value="@Model.Colors[i]" class="form-control" />
                                </div>
                                <div class="col-lg-2">
                                    <input type="text" name="Prices" value="@Model.Prices[i]" class="form-control" />
                                </div>
                                <div class="col-lg-1 text-center align-items-center">
                                    <button type="button" class="btn btn-danger" onclick="removeProductDetail(this)"><i class="fa fa-minus"></i></button>
                                </div>
                            </div>
                        }
                }
                else
                {
                    <div class="row" style="padding-top: .5rem;">
                        <div class="col-lg-3">
                            <input type="text" name="Origins" class="form-control" />
                        </div>
                        <div class="col-lg-3">
                            <input type="number" placeholder="KG" name="Weights" class="form-control" />
                        </div>
                        <div class="col-lg-3">
                            <input type="text" name="Colors" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <input type="text" name="Prices" class="form-control" />
                        </div>
                        <div class="col-lg-1 text-center align-items-center">
                            <input type="hidden" name="Quantities" value="0" />
                            <button type="button" class="btn btn-danger" onclick="removeProductDetail(this)"><i class="fa fa-minus"></i></button>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <button type="button" class="btn btn-primary" style="margin-left: auto;" onclick="addProductDetail()"><i class="fa fa-plus"></i></button>
            </div>
        </div>
    }

    <div class="form-group">
        <input type="button" value="Thêm sản phẩm" class="btn btn-success" onclick="submit()" />
    </div>
</div>
@section Scripts{
    <script type="text/javascript" src="~/admin/js/product/product-detail-validation.js"></script>
    <script type="text/javascript" src="~/admin/js/product/add-product.js"></script>
}